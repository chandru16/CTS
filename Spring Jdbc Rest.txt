/*Product.java*/
package com.cts;
public class Product {
	
	private int productId;
	private String productName;
	private int productQuantity;
	private float productPrice;
	
	public Product() {
		
	}

	public int getProductId() {
		return productId;
	}

	public void setProductId(int productId) {
		this.productId = productId;
	}

	public String getProductName() {
		return productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	public int getProductQuantity() {
		return productQuantity;
	}

	public void setProductQuantity(int productQuantity) {
		this.productQuantity = productQuantity;
	}

	public float getProductPrice() {
		return productPrice;
	}

	public void setProductPrice(float productPrice) {
		this.productPrice = productPrice;
	}
	

}



/*ProductDao.java*/
package com.cts;

import java.sql.ResultSet;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
//import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

@Repository
public class ProductDao {

	@Autowired
	private DataSource ds;
	private JdbcTemplate jdbc;

	public void setJdbc(JdbcTemplate jdbc) {
		this.jdbc = jdbc;
	}

	
	public int addProduct(Product product){
		jdbc = new JdbcTemplate(ds);
		int storedStatus = jdbc.update("INSERT INTO product VALUES(?,?,?,?)", new Object[] {product.getProductId(),product.getProductName(),product.getProductQuantity(),product.getProductPrice()});
		System.out.println(storedStatus);
		return product.getProductId();
	}

	public int deleteProduct(int productId) {
		jdbc = new JdbcTemplate(ds);
		int count = jdbc.update("DELETE FROM product WHERE prod_id=?", new Object[] {productId});
		return count;
	}
	
	
}

/*ProductService*/
package com.cts;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

@Service
public class ProductService {
	
	@Autowired
	ProductDao pDao;
	
	
	public int addProduct(Product product) {
		
		return pDao.addProduct(product);
	}
	
	public int deleteProduct(int productId) {
		
		return pDao.deleteProduct(productId);
	}
	
	

}




/*RestControllerUI
package com.cts.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class RestUI {
	
	@Autowired
	ProductService productServ;
	
	
	@RequestMapping(value="/product",method=RequestMethod.POST,produces = "application/json")
	public ResponseEntity<Product> addProduct(@RequestBody Product product) {
		HttpHeaders headers = new HttpHeaders();
		if(product == null) {
			return new ResponseEntity<Product>(HttpStatus.BAD_REQUEST);
		}
		productServ.addProduct(product);
		headers.add("Product Object Created -",String.valueOf(product.getProductId()));
		return new ResponseEntity<Product>(product,headers,HttpStatus.CREATED);
	}
	
	
	
	@RequestMapping(value="/delete/{productId}",method = RequestMethod.DELETE)
	public ResponseEntity<Product> deleteProduct(@PathVariable("productId") int productId){
		HttpHeaders headers = new HttpHeaders();
		Product product = productServ.getById(productId);
		if(product == null) {
			return new ResponseEntity<Product>(HttpStatus.NOT_FOUND);
		}
		productServ.deleteProduct(prodId);
		headers.add("Product Deleted - ", String.valueOf(productId));
		return new ResponseEntity<Product>(product,headers,HttpStatus.NO_CONTENT);
		
	}
	
	
	

}



/*dispatchler-servlet*/
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<mvc:annotation-driven></mvc:annotation-driven>
	
	<context:annotation-config></context:annotation-config>
	
	<context:component-scan
		base-package="com.cts"></context:component-scan>
		
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<!-- value="com.mysql.jdbc.Driver" /> -->
		<property name="url"
			value="jdbc:mysql://localhost:3306/javadatabase" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="5" />
	</bean>




